"""Initial migration

Revision ID: 5f1952635868
Revises: 
Create Date: 2025-05-28 10:33:18.525009

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f1952635868'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_assignees',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.UUID(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('task_log')
    op.drop_table('projects_users')
    op.drop_table('tasks_users')
    op.add_column('columns', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('columns', sa.Column('last_updated_at', sa.DateTime(), nullable=False))
    op.alter_column('columns', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('columns', 'description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=False)
    op.add_column('projects', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('projects', sa.Column('last_updated_at', sa.DateTime(), nullable=False))
    op.alter_column('projects', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('projects', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=False)
    op.drop_column('projects', 'last_update')
    op.drop_column('projects', 'create_time')
    op.add_column('tasks', sa.Column('title', sa.String(length=100), nullable=False))
    op.add_column('tasks', sa.Column('status', sa.String(length=20), nullable=False))
    op.add_column('tasks', sa.Column('priority', sa.Integer(), nullable=False))
    op.add_column('tasks', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('tasks', sa.Column('last_updated_at', sa.DateTime(), nullable=False))
    op.alter_column('tasks', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=False)
    op.drop_column('tasks', 'last_update')
    op.drop_column('tasks', 'name')
    op.drop_column('tasks', 'create_time')
    op.add_column('users', sa.Column('description', sa.Text(), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('last_updated_at', sa.DateTime(), nullable=False))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'reg_time')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('reg_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.alter_column('users', 'password',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('users', 'last_updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'description')
    op.add_column('tasks', sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('last_update', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('tasks', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_column('tasks', 'last_updated_at')
    op.drop_column('tasks', 'created_at')
    op.drop_column('tasks', 'priority')
    op.drop_column('tasks', 'status')
    op.drop_column('tasks', 'title')
    op.add_column('projects', sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('projects', sa.Column('last_update', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column('projects', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('projects', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('projects', 'last_updated_at')
    op.drop_column('projects', 'created_at')
    op.alter_column('columns', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('columns', 'name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('columns', 'last_updated_at')
    op.drop_column('columns', 'created_at')
    op.create_table('tasks_users',
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='tasks_users_task_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_users_user_id_fkey')
    )
    op.create_table('projects_users',
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='projects_users_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='projects_users_user_id_fkey')
    )
    op.create_table('task_log',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('create_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='task_log_task_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_log_pkey')
    )
    op.drop_table('task_logs')
    op.drop_table('task_assignees')
    op.drop_table('project_users')
    # ### end Alembic commands ###
